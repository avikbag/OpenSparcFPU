Initializing gui preferences from file  /home/DREXEL/ab3433/.synopsys_icc_prefs.tcl
icc_shell> man clock_opt
2.  Synopsys Commands                                        Command Reference
                                   clock_opt

NAME
       clock_opt
              Performs  clock  tree  synthesis, routing of clock nets, extrac-
              tion, optimization,  and  hold  time  violation  fixing  on  the
              design.   There  is  also  an option to perform interclock delay
              balancing.

SYNTAX
       status clock_opt
               [-only_psyn]
               [-fix_hold_all_clocks]
               [-inter_clock_balance]
               [-update_clock_latency]
               [-operating_condition   min | max | min_max]
               [-only_cts]
               [-clock_trees name_of_clocks]
               [-optimize_dft]
               [-continue_on_missing_scandef]
               [-no_clock_route]
               [-only_hold_time]
               [-area_recovery]
               [-size_only | -in_place_size_only]
               [-power]
               [-insert_self_gating]
               [-congestion]
               [-concurrent_clock_and_data]
               [-incremental_concurrent_clock_and_data]

ARGUMENTS
       -only_psyn
              Performs optimization only.

       -fix_hold_all_clocks
              Performs hold time violation fixing for all clocks during incre-
              mental optimization.

              By  default, the clock_opt command does not perform hold fixing.

       -inter_clock_balance
              Performs interclock delay balancing.

              By default, the clock_opt command does  not  perform  interclock
              delay balancing.

       -update_clock_latency
              Updates  the  latencies  on real and virtual clock objects after
              clock tree synthesis, clock tree optimization, interclock  delay
              balancing (if enabled), and clock tree detail routing.

              This  option  effectively executes the set_clock_latency command
              internally for the clock objects and uses the insertion delay of
              the   clock   tree   as  the  latency  value.  If  you  run  the
              set_latency_adjustment_options command before the clock_opt com-
              mand,  the  directives  are  obeyed.  If  you do not specify any
              directives,  only  the  latencies  of  real  clock  objects  are
              updated.   The  update mechanism uses the insertion delay of the
              clock tree as the latency value.

       -operating_condition  min | max | min_max
              Specifies the operating condition. The default is max.

       -only_cts
              Performs only clock tree synthesis, clock tree optimization, and
              clock tree routing.

       -clock_trees name_of_clocks
              Performs  clock  tree  synthesis  and optimization on the clocks
              specified in the order specified.

       -optimize_dft
              Enables clock-aware scan reordering.

              The reordering tries to minimize the number of buffer  crossings
              in  the  scan  chains. Minimizing the number of buffer crossings
              can reduce hold time violations in the scan chains.

              When you specify this option, you must  load  the  SCANDEF  data
              that  defines  the scan chains before running the clock_opt com-
              mand.  You can use the get_scan_chains command to check  if  the
              SCANDEF data is available.

              For  best results, first use the place_opt -optimize_dft command
              to perform placement-aware scan reordering.

              By default, the clock_opt command does not perform scan reorder-
              ing.

       -continue_on_missing_scandef
              Continues  placement when the design contains scan chains but no
              SCANDEF data.

              By default, missing SCANDEF data causes the command to exit with
              an  error  message. If you specify this option, the command con-
              tinues with a warning and results in reduced quality-of-results.

       -no_clock_route
              Disables routing of clock nets.

       -only_hold_time
              Performs only hold time fixing after clock tree synthesis.

              If  you  specify the -fix_hold_all_clocks option, the tool fixes
              hold time violations for all clocks.  Otherwise, the tool  fixes
              hold  time  violations  only  for  the clocks specified with the
              set_fix_hold command.

       -area_recovery
              Enables area recovery for the cells not on the  timing  critical
              paths.

       -size_only
              Restricts  post  clock  tree  synthesis  optimization  to sizing
              changes only.  Optimization procedures that insert new cells and
              remove cells are disabled.

              See  the  description  for  the  -in_place_size_only  option for
              information about how to further constrain sizing changes.

              The -size_only  and  -in_place_size_only  options  are  mutually
              exclusive.

       -in_place_size_only
              Restricts  post  clock  tree  synthesis optimization to in-place
              sizing changes only.  Optimization procedures  that  insert  new
              cells and remove cells are disabled.

              With  the -in_place_size_only option, sizing changes are further
              constrained for minimal engineering change order (ECO) placement
              changes.   For  example,  a  cell  is sized to improve timing or
              design rule costs only if the newly-sized cell can fit into  any
              available  space  adjacent  to  the original cell location.  The
              resulting transformation is verified to ensure that it is legal.

              The  -size_only  and  -in_place_size_only  options  are mutually
              exclusive.

       -power
              Performs the enabled clock tree power optimizations before clock
              tree  synthesis,  as well as power-aware timing optimization and
              leakage-power optimization after clock tree synthesis.

              The supported clock tree  power  optimizations  are  power-aware
              placement  and  clock  gate restructuring. To enable power-aware
              placement, use the set_optimize_pre_cts_power_options command to
              set  the  -low_power_placement  option  to true. When you enable
              power-aware placement, the tool performs incremental  switching-
              activity-based  power-aware placement. For the best results from
              power-aware placement, you should specify the same coarse place-
              ment  setup, such as the placer_max_cell_density_threshold vari-
              able, used in the place_opt command before running the clock_opt
              command.

              To   enable   clock   gate   restructuring,  use  the  set_opti-
              mize_pre_cts_power_options command to set the -merge_clock_gates
              option to true.

              The  clock_opt  command  can  perform leakage-power optimization
              based on either the multiple-threshold-voltage constraint or the
              leakage  values  of  the library cells. To perform leakage-power
              optimization based on the multiple-threshold-voltage constraint,
              use  the  set_multi_vth_constraint  command  to define this con-
              straint before running the  clock_opt  command.   If  this  con-
              straint  is  not defined, the tool bases the leakage-power opti-
              mization on the leakage values of the library cells.

              When you specify this option for a multicorner-multimode design,
              you  must  use  the  set_scenario_options  command to select the
              leakage scenarios before running the clock_opt command.

              When you use the -power option with the  -only_cts  option,  the
              enabled  clock  tree  power  optimizations  are performed before
              clock tree synthesis; leakage-power  optimization  is  not  per-
              formed.

              When  you  use  the  -power  option  with the -only_psyn option,
              power-aware timing optimization and  leakage-power  optimization
              are  performed  but  the  clock tree power optimizations are not
              performed.

              To perform only power-aware-timing optimization and  not  clock-
              tree-power  or leakage-power optimization, do not use the -power
              option. Instead, set  the  icc_preroute_power_aware_optimization
              variable to true before running the clock_opt command.

       -insert_self_gating
              Inserts XOR self-gating logic during clock tree synthesis before
              clock tree construction.

              For best results, you should provide the clock activity informa-
              tion  by  reading  a SAIF file with the read_saif command before
              running the clock_opt command.

       -congestion
              Performs congestion-driven incremental placement during the post
              clock tree synthesis optimization stage.

              By  default,  the clock_opt command does not consider congestion
              during incremental placement.

       -concurrent_clock_and_data
              When   -only_cts   option   is   used   along   with    -concur-
              rent_clock_and_data  option,  the  tool  synthesizes  the  clock
              trees, performs data-path optimization, and computes useful skew
              for  improving  the  setup  WNS  and TNS, and rebuilds the clock
              trees   to   implement   the   useful   skew.   When    -concur-
              rent_clock_and_data   is   used   along  with  only_cts  option,
              clock_opt command accepts other data-path  optimization  options
              such  as  area_recovery,  congestion, etc to guide the data-path
              optimization that is performed inside.

              When   -only_psyn   option   is   used   along   with   -concur-
              rent_clock_and_data  option,  the  tool performs data-path opti-
              mization, WNS improvement driven clock  tree  optimization,  and
              finally performs an additional data-path optimization.

              When  -concurrent_clock_and_datai  is  used  without only_cts or
              only_psyn, it is  equivalent  to  clock_opt  -only_cts  -concur-
              rent_clock_and_data  followed by  clock_opt  -only_psyn -concur-
              rent_clock_and_data.

       -incremental_concurrent_clock_and_data
              Performs incremental data-path optimization and timing  improve-
              ment  driven  clock  tree optimization. The optimization at this
              stage  improves  timing  in  all   active   scenarios.   Options
              -area_recovery and -continue_on_missing_scandef can be used with
              -incremental_concurrent_clock_and_data.

              When this option is given, no clock detail route is called  even
              there is no -no_clock_route given.

              It  is recommended to use -incremental_concurrent_clock_and_data
              only after clock_opt  -only_cts  -concurrent_clock_and_data  and
              clock_opt  -only_psyn  -concurrent_clock_and_data  have  already
              been run.

DESCRIPTION
       The clock_opt command performs clock tree synthesis, routing  of  clock
       nets, extraction, optimization, and optionally hold time violation fix-
       ing on the current design.

       If clock tree synthesis or the routing of the  clock  nets  fails,  the
       command returns with a value of 0.

       If you specify the -only_psyn option, the tool performs only extraction
       and optimization on a clock-routed design.  This option can be used  in
       a  customized  clock  tree synthesis flow where clock tree synthesis is
       performed outside of the clock_opt command.

       Before running the clock_opt command,  use  the  set_clock_tree_options
       command   to   control   the   compile_clock_tree   command.   Use  the
       set_latency_adjustment_options command to issue directives  to  control
       the  adjustment  of latency on clock objects that belong to virtual and
       real clocks. If no directives are given, the default clock_opt  command
       flow  updates  the latencies of real clocks with their insertion delays
       obtained after the compile_clock_tree, optimize_clock_tree, and option-
       ally       balance_inter_clock_delay       commands.       Use      the
       set_inter_clock_delay_options command to control the behavior of inter-
       clock delay balancing within the clock_opt command.

       Briefly, the clock_opt command
         o Runs the optimize_pre_cts_power command, if enabled
         o Runs the compile_clock_tree command
         o Runs the optimize_clock_tree command
         o  Runs the set_propagated_clock command for all clocks from the root
         pin, but keeps the clock object as ideal
         o Performs interclock delay balancing, if enabled
         o Performs detail routing of the clock nets
         o Performs RC extraction of the  clock  nets  and  computes  accurate
         clock arrival times
         o Updates the latency on clock objects, if enabled
         o Reduces congestion, if enabled
         o Optimizes the scan chains, if enabled
         o Fixes the placement of the clock tree buffers and inverters
         o Runs the psynopt command
         o Fixes hold time violations, if enabled

   Multicorner-Multimode Support
       This  command uses information from the clock tree synthesis scenarios.
       All scenarios enabled as clock tree synthesis scenarios  are  activated
       for  clock  tree  synthesis  and  are  returned  to their current state
       (active or inactive) after clock tree synthesis.  If you  enable  power
       optimization,  you must select the leakage scenarios before running the
       clock_opt command.

EXAMPLES
       The following command performs clock tree  synthesis,  routing  of  all
       clock nets, extraction, and optimization:

         prompt> clock_opt

SEE ALSO
       extract_rc(2)
       psynopt(2)
       place_opt(2)
       read_saif(2)
       route_opt(2)
       set_clock_tree_options(2)
       set_inter_clock_delay_options(2)
       set_latency_adjustment_options(2)
       set_multi_vth_constraint(2)
       set_scenario_options(2)
       icc_preroute_power_aware_optimization(3)
       skew_opt(2)
       set_concurrent_clock_and_data_strategy(2)
       reset_concurrent_clock_and_data_strategy(2)
       report_concurrent_clock_and_data_strategy(2)

                         Version L-2016.03-SP5-1
            Copyright (c) 2016 Synopsys, Inc. All rights reserved.
icc_shell> quit

Thank you...

